nsme: CI/CD Pipeline

on:
  push:
    branches:[main]

jobs:
  data_fetch:
    runs-on: ubuntu-latest

steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Fetch data
      run: python fetch_data.py

params:
- params.yaml
stages:
  load_data:
    cmd: python ${data.srcpath}data_load.py ${data.filepath} ${data.processed}train_test_data.csv
    deps:
    - ${data.srcpath}data_load.py
    - ${data.filepath}
    outs:
    - ${data.processed}train_test_data.csv

  preprocess:
    cmd: python ${data.srcpath}preprocess.py ${data.processed}train_test_data.csv
      ${data.srcpath}params.yaml ${data.processed}X_train.csv ${data.processed}X_test.csv
      ${data.processed}y_train.csv ${data.processed}y_test.csv
    deps:
    - ${data.srcpath}preprocess.py
    - ${data.processed}train_test_data.csv
    - ${data.srcpath}params.yaml
    outs:
    - ${data.processed}X_train.csv
    - ${data.processed}X_test.csv
    - ${data.processed}y_train.csv
    - ${data.processed}y_test.csv

  train:
    #matrix:
    #  model: [lr, clf, xgb]

    cmd: python ${data.srcpath}train.py ${data.srcpath}params.yaml ${data.processed}X_train.csv
      ${data.processed}y_train.csv ${data.mod}
    deps:
    - ${data.srcpath}train.py
    - ${data.processed}X_train.csv
    - ${data.processed}y_train.csv
    - ${data.srcpath}params.yaml
    params:
    - train_lr.solver
    - train_lr.C
    - train_lr.max_iter
    - train_lr.penalty
    - train_clf.criterion
    - train_clf.max_depth
    - train_clf.splitter
    - train_xgb.objective
    - train_xgb.eval_metric
    - train_xgb.max_depth
    - train_xgb.learning_rate
    - train_xgb.n_estimators
    outs:
    - ${data.models}${data.mod}_model.pkl


  evaluate:
    #matrix:
    #  model: [lr, clf, xgb]
    cmd: python ${data.srcpath}evaluate.py ${data.models}${data.mod}_model.pkl ${data.processed}X_test.csv
      ${data.processed}y_test.csv ${data.reports}${data.mod}_evaluation.txt ${data.reports}${data.mod}_pred.csv
      ${data.srcpath}params.yaml ${data.mod}

    deps:
    - ${data.srcpath}evaluate.py
    - ${data.models}${data.mod}_model.pkl
    - ${data.processed}X_test.csv
    - ${data.processed}y_test.csv
    outs:
    - ${data.reports}${data.mod}_evaluation.txt
    - ${data.reports}${data.mod}_pred.csv
    #- ${data.metrics}${data.mod}_metrics.json

    metrics:
    - ${data.metrics}${data.mod}_metrics.json:
        cache: true
metrics:
- dvclive/metrics.json
plots:
- dvclive/plots/metrics:
    x: step
- dvclive/plots/sklearn/roc.json:
    template: simple
    x: fpr
    y: tpr
    title: Receiver operating characteristic (ROC)
    x_label: False Positive Rate
    y_label: True Positive Rate
- dvclive/plots/sklearn/precision_recall.json:
    template: simple
    x: recall
    y: precision
    title: Precision-Recall Curve
    x_label: Recall
    y_label: Precision
- dvclive/plots/sklearn/det.json:
    template: simple
    x: fpr
    y: fnr
    title: Detection error tradeoff (DET)
    x_label: False Positive Rate
    y_label: False Negative Rate
- dvclive/plots/sklearn/calibration.json:
    template: simple
    x: prob_pred
    y: prob_true
    title: Calibration Curve
    x_label: Mean Predicted Probability
    y_label: Fraction of Positives
